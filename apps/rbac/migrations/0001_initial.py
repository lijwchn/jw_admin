# Generated by Django 4.2.13 on 2024-06-27 10:01

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="创建人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "updater",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="修改人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, help_text="修改时间", verbose_name="修改时间"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="创建时间", verbose_name="创建时间"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        default="ant-design:book-outlined",
                        max_length=64,
                        verbose_name="菜单图标",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="菜单名称", max_length=64, verbose_name="菜单名称"
                    ),
                ),
                (
                    "permission",
                    models.CharField(
                        blank=True,
                        help_text="权限标识",
                        max_length=64,
                        null=True,
                        verbose_name="权限标识",
                    ),
                ),
                (
                    "is_ext",
                    models.BooleanField(
                        default=False, help_text="是否外链", verbose_name="是否外链"
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[(0, "目录"), (1, "菜单")],
                        help_text="是否目录",
                        verbose_name="是否目录",
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True,
                        help_text="路由地址",
                        max_length=128,
                        null=True,
                        verbose_name="路由地址",
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="菜单状态",
                        verbose_name="菜单状态",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rbac.menu",
                        verbose_name="上级菜单",
                    ),
                ),
            ],
            options={
                "verbose_name": "菜单表",
                "verbose_name_plural": "菜单表",
                "db_table": "system_menu",
            },
        ),
        migrations.CreateModel(
            name="MenuButton",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="创建人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "updater",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="修改人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, help_text="修改时间", verbose_name="修改时间"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="创建时间", verbose_name="创建时间"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="名称", max_length=64, verbose_name="名称"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="权限值", max_length=64, verbose_name="权限值"
                    ),
                ),
                (
                    "api",
                    models.CharField(
                        help_text="接口地址", max_length=200, verbose_name="接口地址"
                    ),
                ),
                (
                    "method",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        help_text="接口请求方法",
                        null=True,
                        verbose_name="接口请求方法",
                    ),
                ),
                (
                    "menu",
                    models.ForeignKey(
                        db_constraint=False,
                        help_text="关联菜单",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="menuPermission",
                        to="rbac.menu",
                        verbose_name="关联菜单",
                    ),
                ),
            ],
            options={
                "verbose_name": "菜单按钮权限表",
                "verbose_name_plural": "菜单按钮权限表",
                "db_table": "system_menu_button",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="创建人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "updater",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="修改人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, help_text="修改时间", verbose_name="修改时间"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="创建时间", verbose_name="创建时间"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="角色名称", max_length=64, verbose_name="角色名称"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="角色编码",
                        max_length=64,
                        unique=True,
                        verbose_name="角色编码",
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        default=True, help_text="角色状态", verbose_name="角色状态"
                    ),
                ),
                (
                    "menu",
                    models.ManyToManyField(
                        db_constraint=False,
                        help_text="关联菜单",
                        to="rbac.menu",
                        verbose_name="关联菜单",
                    ),
                ),
                (
                    "menu_button",
                    models.ManyToManyField(
                        db_constraint=False,
                        to="rbac.menubutton",
                        verbose_name="关联菜单的接口按钮",
                    ),
                ),
            ],
            options={
                "verbose_name": "角色表",
                "verbose_name_plural": "角色表",
                "db_table": "system_role",
            },
        ),
        migrations.CreateModel(
            name="Dept",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="创建人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "updater",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="修改人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, help_text="修改时间", verbose_name="修改时间"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="创建时间", verbose_name="创建时间"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="部门名称", max_length=64, verbose_name="部门名称"
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True,
                        help_text="负责人",
                        max_length=32,
                        null=True,
                        verbose_name="负责人",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="联系电话",
                        max_length=32,
                        null=True,
                        verbose_name="联系电话",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="邮箱",
                        max_length=32,
                        null=True,
                        verbose_name="邮箱",
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="部门状态",
                        null=True,
                        verbose_name="部门状态",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        help_text="上级部门",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="rbac.dept",
                        verbose_name="上级部门",
                    ),
                ),
            ],
            options={
                "verbose_name": "部门表",
                "verbose_name_plural": "部门表",
                "db_table": "system_dept",
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user_login has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user_login can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user_login should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="创建人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "updater",
                    models.CharField(
                        blank=True,
                        default="system",
                        help_text="修改人",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, help_text="修改时间", verbose_name="修改时间"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="创建时间", verbose_name="创建时间"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        max_length=50,
                        unique=True,
                        verbose_name="用户账号",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="邮箱",
                        max_length=255,
                        null=True,
                        verbose_name="邮箱",
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True,
                        help_text="电话",
                        max_length=50,
                        null=True,
                        verbose_name="电话",
                    ),
                ),
                (
                    "avatar",
                    models.TextField(
                        blank=True, help_text="头像", null=True, verbose_name="头像"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="姓名", max_length=40, verbose_name="姓名"
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        default=True, help_text="状态", verbose_name="状态"
                    ),
                ),
                (
                    "gender",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "女"), (1, "男")],
                        default=1,
                        null=True,
                        verbose_name="性别",
                    ),
                ),
                (
                    "user_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "后台用户"), (1, "前台用户")],
                        default=0,
                        null=True,
                        verbose_name="用户类型",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=50, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "dept",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="关联部门",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rbac.dept",
                        verbose_name="所属部门",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user_login belongs to. A user_login will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user_login",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "role",
                    models.ManyToManyField(
                        db_constraint=False,
                        help_text="关联角色",
                        to="rbac.role",
                        verbose_name="关联角色",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user_login.",
                        related_name="user_set",
                        related_query_name="user_login",
                        to="auth.permission",
                        verbose_name="user_login permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户表",
                "db_table": "system_users",
                "ordering": ("-create_time",),
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
